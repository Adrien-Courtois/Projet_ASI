/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: WildFly Full 26.0.0.Final (WildFly Core 18.0.0.Final) - 2.2.14.Final
 * Generated at: 2022-01-26 14:03:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.persistence.Persistence;
import java.util.List;
import com.google.common.hash.Hashing;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityManager;
import java.nio.charset.StandardCharsets;
import Entity.Client;

public final class profilConseiller_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/link.jsp", Long.valueOf(1643205791532L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.persistence.Persistence");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("javax.persistence.EntityManagerFactory");
    _jspx_imports_classes.add("com.google.common.hash.Hashing");
    _jspx_imports_classes.add("javax.persistence.EntityManager");
    _jspx_imports_classes.add("Entity.Client");
    _jspx_imports_classes.add("java.nio.charset.StandardCharsets");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JBWEB004248: JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      response.addHeader("X-Powered-By", "JSP/2.3");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Profil Conseiller</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<a href=\"/Projet\">Accueil</a> |\n");
      out.write("\n");
if(request.getSession().getAttribute("name") == null){ 
      out.write("\n");
      out.write("    <a href=\"login.jsp\">Connexion</a> |\n");
 }else{ 
      out.write("\n");
      out.write("    <a href=\"LogoutServlet\">Deconnexion</a> |\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("<a href=\"ProfileServlet\">Mon profil</a>\n");
      out.write("<hr>");
      out.write("\n");
      out.write("    <h2>Bonjour ");
      out.print(request.getSession().getAttribute("name"));
      out.write("</h2>\n");
      out.write("    <p>Voici vos clients</p>\n");
      out.write("\n");
      out.write("    <table>\n");
      out.write("        <thead>\n");
      out.write("            <tr>\n");
      out.write("                <th style=\"border: 1px solid #333\">Nom du client</th>\n");
      out.write("            </tr>\n");
      out.write("        </thead>\n");
      out.write("        <tbody>\n");
      out.write("\n");

    EntityManagerFactory entityManagerFactory = null;
    EntityManager entityManager = null;

    try {
        entityManagerFactory = Persistence.createEntityManagerFactory("Clients");
        entityManager = entityManagerFactory.createEntityManager();

        List<Client> clients = entityManager.createQuery("select c from Client c where c.idConseiller = '" + request.getSession().getAttribute("idUser") + "'", Client.class).getResultList();
        for (Client client : clients) {
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td style=\"border: 1px solid #333\">");
      out.print(client.getLoginClient());
      out.write("</td>\n");
      out.write("            </tr>\n");
      out.write("        ");
}
    }finally {
        if ( entityManager != null ) entityManager.close();
        if ( entityManagerFactory != null ) entityManagerFactory.close();
    }

      out.write("\n");
      out.write("\n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
